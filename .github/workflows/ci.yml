name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mutagen requests

    - name: Install Node.js dependencies
      run: npm ci

    - name: Type check
      run: npm run type-check

    - name: Lint code
      run: npm run lint

    - name: Build Next.js
      run: npm run build

    - name: Test Python scripts
      run: |
        python -c "import mutagen.easyid3; import mutagen.mp3; print('Python imports OK')"
        python -c "import json, sys; print('Python JSON module OK')"

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    needs: test
    if: github.event_name == 'release' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mutagen requests

    - name: Install Node.js dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Build Electron app
      run: npm run dist:win
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Windows installer
      uses: actions/upload-artifact@v3
      with:
        name: music-scan-pro-windows
        path: dist/*.msi

    - name: Upload to release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.msi
          dist/*.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    needs: test
    if: github.event_name == 'release' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mutagen requests

    - name: Install Node.js dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Build Electron app
      run: npm run dist:mac
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload macOS installer
      uses: actions/upload-artifact@v3
      with:
        name: music-scan-pro-macos
        path: dist/*.dmg

    - name: Upload to release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install mutagen requests

    - name: Install Node.js dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Build Electron app
      run: npm run dist:linux
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Linux installer
      uses: actions/upload-artifact@v3
      with:
        name: music-scan-pro-linux
        path: dist/*.AppImage

    - name: Upload to release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*.AppImage
          dist/*.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 